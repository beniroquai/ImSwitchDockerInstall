name: Build-RaspberryPi-Image
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  pi-gen-build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Debug list top-level repo files
        run: |
          echo "==== Top-level contents ===="
          ls -la
          echo "==== Known scripts in root ===="
          ls -l create_desktopicons.sh git_clone_imswitchconfig.sh install_*sh

      - name: Create custom stage
        run: |
          # 1) Make the custom-stage folder
          mkdir -p custom-stage/package-scripts

          # 2) Create 'prerun.sh' in custom-stage (runs on host before the chroot is set up)
          cat << 'EOF' > custom-stage/prerun.sh
          #!/bin/bash -e
          echo "=== custom-stage/prerun.sh: Checking if ${ROOTFS_DIR} is present ==="
          if [ ! -d "${ROOTFS_DIR}" ]; then
            echo "=== prerun.sh: copy_previous because ROOTFS_DIR doesn't exist ==="
            copy_previous
          else
            echo "=== prerun.sh: ${ROOTFS_DIR} found, skipping copy_previous ==="
          fi
          EOF
          chmod +x custom-stage/prerun.sh

          # 3) Create '00-run-chroot.sh' in package-scripts (this runs inside the Pi's OS)
          cat << 'EOF' > custom-stage/package-scripts/00-run-chroot.sh
          #!/bin/bash
          set -e

          echo "=== 00-run-chroot.sh: Running inside the Pi image (chroot) ==="
          # We'll put any apt-get installs or environment tweaks here:
          apt-get update -y
          apt-get install -y curl git  # example of extra packages for your scripts

          # EXAMPLE: Copy your scripts from the *host* into /root/scripts and run them
          # Approach A) We simply curl them from GitHub one by one:
          # (uncomment if you prefer curling them)
          # cd /root
          # curl -O https://raw.githubusercontent.com/<user>/<repo>/main/install_docker_raspi.sh
          # curl -O https://raw.githubusercontent.com/<user>/<repo>/main/install_autostart.sh
          # chmod +x *.sh
          # ./install_docker_raspi.sh
          # ./install_autostart.sh
          # ...
          
          # Approach B) Inline the relevant script lines here, if they're short
          # or "sed" them out of /boot, or any number of ways to get them in.

          # For demonstration, let's do something like:
          echo "=== 00-run-chroot.sh: Cloning your Git repo so we can run scripts ==="
          cd /tmp
          git clone https://github.com/<user>/<repo>.git my-scripts
          cd my-scripts
          chmod +x install_docker_raspi.sh install_autostart.sh
          echo "=== 00-run-chroot.sh: Running your scripts now ==="
          ./install_docker_raspi.sh
          ./install_autostart.sh
          # etc.

          echo "=== Done running custom scripts inside chroot. ==="
          EOF
          chmod +x custom-stage/package-scripts/00-run-chroot.sh

          # Debug: show final layout
          echo "=== custom-stage folder layout ==="
          tree custom-stage

      - name: Run pi-gen
        id: build
        uses: usimd/pi-gen-action@v1
        with:
          # The base name for the final image
          image-name: imswitch-raspi-lite

          # Run official stages + your custom stage
          stage-list: stage0 stage1 stage2 ./custom-stage

          # Basic config
          disable-first-boot-user-rename: 0
          enable-noobs: false
          enable-ssh: 1
          hostname: uc2
          password: youseetoo
          keyboard-layout: de
          timezone: Europe/Berlin
          locale: en_US.UTF-8
          extra-host-dependencies: git nano
          wpa-country: DE
          wpa-essid: "Blynk"
          wpa-password: "12345678"
          verbose-output: true

      - name: Upload image artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@v4
        with:
          name: raspios-custom-image
          path: pi-gen/deploy/*

name: Build-RaspberryPi-Image
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  pi-gen-build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Debug list top-level repo files
        run: |
          echo "==== Top-level contents ===="
          ls -la
          echo "==== Known scripts in root ===="
          ls -l create_desktopicons.sh \
                git_clone_imswitchconfig.sh \
                install_autostart.sh \
                install_dahengdriver.sh \
                install_docker_raspi.sh \
                install_hikdriver.sh \
                install_native.sh \
                install_raspap.sh \
                install_vimba.sh

      - name: Prepare custom stage
        run: |
          #
          # 1) Create custom-stage folder
          #
          mkdir -p custom-stage/package-scripts/files/usr/local/scripts

          #
          # 2) Copy scripts into package-scripts/files/usr/local/scripts
          #    so pi-gen automatically copies them to /usr/local/scripts
          #    inside the target filesystem.
          #
          cp create_desktopicons.sh            custom-stage/package-scripts/files/usr/local/scripts/
          cp git_clone_imswitchconfig.sh       custom-stage/package-scripts/files/usr/local/scripts/
          cp install_autostart.sh              custom-stage/package-scripts/files/usr/local/scripts/
          cp install_dahengdriver.sh           custom-stage/package-scripts/files/usr/local/scripts/
          cp install_docker_raspi.sh           custom-stage/package-scripts/files/usr/local/scripts/
          cp install_hikdriver.sh              custom-stage/package-scripts/files/usr/local/scripts/
          cp install_native.sh                 custom-stage/package-scripts/files/usr/local/scripts/
          cp install_raspap.sh                 custom-stage/package-scripts/files/usr/local/scripts/
          cp install_vimba.sh                  custom-stage/package-scripts/files/usr/local/scripts/

          echo "==== Custom stage layout (before prerun & run-chroot) ===="
          find custom-stage

          #
          # 3) prerun.sh runs on the host before chroot
          #
          cat << 'EOF' > custom-stage/prerun.sh
          #!/bin/bash -e
          echo "=== custom-stage/prerun.sh: Checking if ${ROOTFS_DIR} is present ==="
          if [ ! -d "${ROOTFS_DIR}" ]; then
            echo "=== prerun.sh: copy_previous because ROOTFS_DIR doesn't exist ==="
            copy_previous
          else
            echo "=== prerun.sh: ${ROOTFS_DIR} found, skipping copy_previous ==="
          fi
          EOF
          chmod +x custom-stage/prerun.sh

          #
          # 4) Create 00-run-chroot in package-scripts (runs INSIDE the Pi image)
          #
          cat << 'EOF' > custom-stage/package-scripts/00-run-chroot
          #!/bin/bash -e
          echo "=== 00-run-chroot: We are now inside the target filesystem ==="

          # If needed, apt-get install anything for your scripts
          apt-get update -y
          apt-get install -y git nano curl  # example

          # Make scripts executable and run them:
          echo "=== Making /usr/local/scripts/*.sh executable ==="
          chmod +x /usr/local/scripts/*.sh

          echo "=== Running your scripts in order ==="
          cd /usr/local/scripts
          ./install_docker_raspi.sh
          ./install_native.sh
          ./install_autostart.sh
          ./install_raspap.sh
          ./install_dahengdriver.sh
          ./install_hikdriver.sh
          ./install_vimba.sh
          ./git_clone_imswitchconfig.sh
          ./create_desktopicons.sh

          echo "=== Done executing custom scripts inside chroot ==="
          EOF
          chmod +x custom-stage/package-scripts/00-run-chroot

      - name: Run pi-gen
        id: build
        uses: usimd/pi-gen-action@v1
        with:
          # The final image name
          image-name: imswitch-raspi-lite

          # We'll run stage0..2, then our custom-stage
          stage-list: stage0 stage1 stage2 ./custom-stage

          # Basic config
          disable-first-boot-user-rename: 0
          enable-noobs: false
          enable-ssh: 1
          hostname: uc2
          password: youseetoo
          keyboard-layout: de
          timezone: Europe/Berlin
          locale: en_US.UTF-8
          extra-host-dependencies: git nano
          wpa-country: DE
          wpa-essid: "Blynk"
          wpa-password: "12345678"
          verbose-output: true

      - name: Upload image artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@v4
        with:
          name: raspios-custom-image
          path: pi-gen/deploy/*

name: Build-RaspberryPi-Image
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  pi-gen-build:
    runs-on: ubuntu-latest
    steps:
      #
      # 1) Checkout your repository (which already contains the .sh scripts at the root)
      #
      - name: Check out repository
        uses: actions/checkout@v3

      #
      # 2) Debug: Show which scripts are in the root folder
      #
      - name: Debug - list scripts
        run: |
          echo "==== Files in root ===="
          ls -la
          echo "==== Checking your scripts ===="
          ls -l create_desktopicons.sh \
                git_clone_imswitchconfig.sh \
                install_autostart.sh \
                install_dahengdriver.sh \
                install_docker_raspi.sh \
                install_hikdriver.sh \
                install_native.sh \
                install_raspap.sh \
                install_vimba.sh

      #
      # 3) Prepare a custom pi-gen stage with a numeric sub-stage folder
      #
      - name: Prepare custom stage
        run: |
          # Create 'custom-stage' and inside it, one sub-stage folder '01-install-scripts'
          mkdir -p custom-stage/01-install-scripts

          # 3a) The main stage's prerun.sh (host side)
          cat << 'EOF' > custom-stage/prerun.sh
          #!/bin/bash -e
          echo "=== Running custom-stage/prerun.sh ==="
          if [ ! -d "${ROOTFS_DIR}" ]; then
            echo "=== prerun.sh: copy_previous because $ROOTFS_DIR doesn't exist ==="
            copy_previous
          else
            echo "=== prerun.sh: $ROOTFS_DIR found, skipping copy_previous ==="
          fi
          EOF
          chmod +x custom-stage/prerun.sh

          # 3b) The sub-stage folder '01-install-scripts' must contain:
          #     - Optionally 00-debconf, 00-patches, etc
          #     - A files/ directory if you want to copy scripts into the OS
          #     - 00-run-chroot to run inside the Pi OS

          # Create a files/ directory pointing to /usr/local/scripts in the target OS
          mkdir -p custom-stage/01-install-scripts/files/usr/local/scripts

          # Copy all your existing scripts from the root repo into that folder
          cp create_desktopicons.sh       custom-stage/01-install-scripts/files/usr/local/scripts/
          cp git_clone_imswitchconfig.sh  custom-stage/01-install-scripts/files/usr/local/scripts/
          cp install_autostart.sh         custom-stage/01-install-scripts/files/usr/local/scripts/
          cp install_dahengdriver.sh      custom-stage/01-install-scripts/files/usr/local/scripts/
          cp install_docker_raspi.sh      custom-stage/01-install-scripts/files/usr/local/scripts/
          cp install_hikdriver.sh         custom-stage/01-install-scripts/files/usr/local/scripts/
          cp install_native.sh            custom-stage/01-install-scripts/files/usr/local/scripts/
          cp install_raspap.sh            custom-stage/01-install-scripts/files/usr/local/scripts/
          cp install_vimba.sh             custom-stage/01-install-scripts/files/usr/local/scripts/

          # Now create 00-run-chroot in '01-install-scripts'
          cat << 'EOF' > custom-stage/01-install-scripts/00-run-chroot
          #!/bin/bash -e
          echo "=== 00-run-chroot: Entered the chroot environment of the OS ==="

          # Example: install any packages you need for your scripts
          apt-get update -y
          apt-get install -y git nano curl

          # Make your scripts executable and run them
          echo "=== Marking /usr/local/scripts/*.sh as executable ==="
          chmod +x /usr/local/scripts/*.sh

          echo "=== Executing your scripts in sequence ==="
          cd /usr/local/scripts
          ./install_docker_raspi.sh
          ./install_native.sh
          ./install_autostart.sh
          ./install_raspap.sh
          ./install_dahengdriver.sh
          ./install_hikdriver.sh
          ./install_vimba.sh
          ./git_clone_imswitchconfig.sh
          ./create_desktopicons.sh
          echo "=== Done with 00-run-chroot ==="
          EOF
          chmod +x custom-stage/01-install-scripts/00-run-chroot

          # Show the final layout
          echo "=== custom-stage folder layout ==="
          find custom-stage

      #
      # 4) Run pi-gen with your new custom stage appended
      #
      - name: Run pi-gen
        id: build
        uses: usimd/pi-gen-action@v1
        with:
          # The image name
          image-name: imswitch-raspi-lite
          # Stages
          stage-list: stage0 stage1 stage2 ./custom-stage

          # Basic config
          disable-first-boot-user-rename: 0
          enable-noobs: false
          enable-ssh: 1
          hostname: uc2
          password: youseetoo
          keyboard-layout: de
          timezone: Europe/Berlin
          locale: en_US.UTF-8

          # If your scripts need e.g. parted or other build-host packages, add them here
          extra-host-dependencies: git nano

          wpa-country: DE
          wpa-essid: "Blynk"
          wpa-password: "12345678"
          verbose-output: true
          # If you see memory errors:
          #   increase-runner-disk-size: true
          #   (and consider a swap step)

      #
      # 5) Upload the final image from the deploy folder
      #
      - name: Upload image artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@v4
        with:
          name: raspios-custom-image
          path: pi-gen/deploy/*
